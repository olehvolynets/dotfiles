unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

set -g default-terminal "tmux-256color"
# set -g default-terminal "xterm-256color"
set -ga terminal-overrides ',*256color:Tc'
set -ga terminal-features ',*256color:Tc'
set -g history-limit 10000
# Don't wait for an escape sequence after seeing a prefix
set -sg escape-time 0
# Dynamically update iTerm tab and window titles.
set-option -g set-titles on
# # Needed as on tmux 1.9 and up (defaults to off).
# # Added in tmux commit c7a121cfc0137c907b7bfb.
set-option -g focus-events on
# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set-option -g renumber-windows on
set-option -w -g xterm-keys on
# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column
# breathing room (default looks to be about 79).
set-option -w -g main-pane-width 85
# Start window and pane numbering at 1, (0 is too hard to reach).
# set-option -g base-index 1
# set-option -g pane-base-index 1
# But don't change tmux's own window titles.
set-option -w -g automatic-rename off
# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set-option -w -g wrap-search off
# Show bells in window titles.
set-option -g window-status-bell-style fg=yellow,bold,underscore
# Add : to the default list (" -_@") of word separators.
set-option -ga word-separators :/


# Vim-like key bindings for pane navigation (default uses cursor keys).
unbind-key h
bind-key h select-pane -L
unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key l # normally used for last-window
bind-key l select-pane -R
# Fast toggle between current and last-used pane
# unbind-key w
# bind-key w last-pane

# Resizing (mouse also works).
unbind-key Left
bind-key -r Left resize-pane -L 5
unbind-key Right
bind-key -r Right resize-pane -R 5
unbind-key Down
bind-key -r Down resize-pane -D 5
unbind-key Up
bind-key -r Up resize-pane -U 5



# Open new/split panes with the path of the current pane.
unbind-key c
bind-key c new-window -c '#{pane_current_path}'
unbind-key %
bind-key % split-window -h -c '#{pane_current_path}'
unbind-key '"'
bind-key '"' split-window -v -c '#{pane_current_path}'
# Fast toggle between current and last-used window (normally prefix-l).
# unbind-key w
# bind-key w last-window

# Intuitive window-splitting keys.
# bind-key | split-window -h -c '#{pane_current_path}' # normally prefix-%
# bind-key '\' split-window -h -c '#{pane_current_path}' # normally prefix-%
# bind-key - split-window -v -c '#{pane_current_path}' # normally prefix-"

bind-key -r '<' swap-window -d -t '{previous}' # Move window left.
bind-key -r '>' swap-window -d -t '{next}' # Move window right.



set -g mouse on

# Scroll 3 lines at a time instead of default 5; don't extend dragged selections.
bind-key -T copy-mode-vi WheelUpPane select-pane\; send-keys -t'{mouse}' -X -N 3 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane\; send-keys -t'{mouse}' -X -N 3 scroll-down

# # Stay in copy mode on drag end.
# # (Would use `bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
# # stop-selection` but it is a bit glitchy.)
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
bind-key -T root DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T root TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# Don't exit copy mode on double or triple click.
bind-key -T copy-mode-vi DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T copy-mode-vi TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel





# # `^space ^space` is awfully close to the destructive `^space space`, which
# # trashes the layout. Providea quick way to get back to the previous-used
# # layout.
# #
# # Normally used for previous-window, but I never use that, prefering numeric
# # access.
# # bind-key p select-layout -o
#
# Status bar.
set-option -g status-style "bg=#090909,fg=#f6fade,bold"
# set-option -g status-left-length 40
set-option -g status-left ""
set-option -g status-right "#[fg=#00bfa4,bold,italics]∆ #S "
# set-option -g status-interval 60 # Default is 15.
set -g pane-border-style "fg=#f92672"
set -g pane-active-border-style "fg=#00bfa4"

# Highlight active window.
set -g window-status-current-style "fg=#f92672"

# Make widths constant with or without flags.
set-option -w -g window-status-current-format ' #I:#W#F '
set-option -w -g window-status-format ' #I:#W#{?#{==:#F,},  ,#F }'




# # Make sure we always start at 1, even when invoked from a .tmux wrapper script.
# set-environment -g SHLVL 1

# # Clipper.
bind-key y run-shell "tmux save-buffer - | clip"

# # "copy-pipe" requires tmux >= 1.8
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "clip"

# # Search back to last prompt (mnemonic: "[b]ack").
# bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "❯"\; send-keys -X next-word

# bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
# bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# # Analagous with naked C-l which resets/clears the terminal.
bind-key C-l clear-history
bind-key R source-file ~/.config/tmux/tmux.conf \; display-message "tmux configuration reloaded"
bind-key M split-window -h "nvim ~/.config/tmux/tmux.conf"
bind-key -r f run-shell "tmux neww ~/.local/bin/hot-paths"
